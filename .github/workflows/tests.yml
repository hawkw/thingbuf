on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '.github/workflows/tests.yml'
  workflow_dispatch:
  pull_request:
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '.github/workflows/tests.yml'

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  msrv: 1.57.0

name: Tests
jobs:
  build_no_std:
    name: cargo check (no-std)
    runs_on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
      uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features --features alloc

  tests:
    name: Tests
    strategy:
      matrix:
        # test all Rust versions on Ubuntu
        rust: [stable, 1.57.0]
        os: [ubuntu-latest, m]
        # test stable Rust on Windows and MacOS as well
        include:
          - rust: stable
            os: windows-latest
          - rust: stable
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt
      - name: Run cargo test (with static APIs)
        if: ${{ matrix.rust != env.msrv }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
      - name: Run cargo test (no static APIs)
        if: ${{ matrix.rust == env.msrv }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          # skip doctests, which require all features to be enabled
          args: --lib --tests

  benches:
    name: Compile benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -p bench --benches